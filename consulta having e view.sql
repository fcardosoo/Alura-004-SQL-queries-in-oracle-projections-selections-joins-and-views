
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES;

SELECT * FROM TABELA_DE_CLIENTES WHERE BAIRRO IN(
'Tijuca',
'Jardins',
'Copacabana',
'Santo Amaro');

-- SUBCONSULTA

SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES;

SELECT * FROM TABELA_DE_CLIENTES WHERE BAIRRO IN(
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES);

SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) FROM ITENS_NOTAS_FISCAIS INF
INNER JOIN TABELA_DE_PRODUTOS TP
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) >39400
ORDER BY SUM (INF.QUANTIDADE) DESC;

-- 1º) Reduzindo a consulta para LISTA DE PRODUTOS
SELECT INF.CODIGO_DO_PRODUTO FROM ITENS_NOTAS_FISCAIS INF
INNER JOIN TABELA_DE_PRODUTOS TP
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) >39400
ORDER BY SUM (INF.QUANTIDADE) DESC;

-- 2º) Usar a consulta acima como critério de FILTRO dentro de um IN
SELECT DISTINCT SABOR FROM TABELA_DE_PRODUTOS WHERE
CODIGO_DO_PRODUTO IN (SELECT INF.CODIGO_DO_PRODUTO 
FROM ITENS_NOTAS_FISCAIS INF
INNER JOIN TABELA_DE_PRODUTOS TP
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) >39400
ORDER BY SUM (INF.QUANTIDADE) DESC);
-- 3º Remover o ORDER BY
SELECT DISTINCT SABOR FROM TABELA_DE_PRODUTOS 
WHERE CODIGO_DO_PRODUTO IN (SELECT INF.CODIGO_DO_PRODUTO 
FROM ITENS_NOTAS_FISCAIS INF
INNER JOIN TABELA_DE_PRODUTOS TP
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO
HAVING SUM(INF.QUANTIDADE) >39400);

-----------------------------------------------------

-- Consulta BASE para trazer a SOMA dos preços por EMBALAGEM
SELECT EMBALAGEM, SUM(PRECO_DE_LISTA) AS SOMA_PRECO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM;

-- Embalagem Soma_preco
-- Garrafa   	76,9335
-- PET	       249,6425
-- Lata	        19,9935

-- Para retornar apenas os produtos acima de R$80.00 usando o HAVING
SELECT EMBALAGEM, SUM(PRECO_DE_LISTA) AS SOMA_PRECO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM
HAVING SUM(PRECO_DE_LISTA) >=80;

-- Agora a mesma consulta acima por SUBQUERY
SELECT SOMA_EMBALAGENS.EMBALAGEM, SOMA_EMBALAGENS.SOMA_PRECO
FROM (SELECT EMBALAGEM, SUM(PRECO_DE_LISTA) AS SOMA_PRECO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM) SOMA_EMBALAGENS
WHERE SOMA_EMBALAGENS.SOMA_PRECO >= 80;

SELECT SOMA_EMBALAGENS.EMBALAGEM, SOMA_EMBALAGENS.SOMA_PRECO
FROM (SELECT EMBALAGEM, SUM(PRECO_DE_LISTA) AS SOMA_PRECO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM) SOMA_EMBALAGENS
WHERE SOMA_EMBALAGENS.SOMA_PRECO >= 80;

-- Criando uma VIEW para resolver o mesmo problema de cima
-- CRIANDO UMA VISÃO USAR O PREFIXO 'VW_'
CREATE VIEW VW_SOMA_EMBALAGENS AS 
SELECT EMBALAGEM, SUM(PRECO_DE_LISTA) AS SOMA_PRECO
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM;

SELECT EMBALAGEM, SOMA_PRECO FROM VW_SOMA_EMBALAGENS
WHERE SOMA_PRECO >= 80;

-- Usando o VIEW para realizar consultas como se fosse uma TABELA
SELECT * FROM TABELA_DE_PRODUTOS TP
INNER JOIN VW_SOMA_EMBALAGENS VW
ON TP.EMBALAGEM = VW.EMBALAGEM
WHERE VW.SOMA_PRECO >=80;